name: Slow

on:
  pull_request:
    branches:
      - master
      - develop
    paths-ignore:
      - 'doc/**'
      - 'tools/**'

jobs:

  superproject_cmake_and_b2:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: cmake from superproject
      run: |
        cd ..
        git clone -b $GITHUB_BASE_REF --depth 5 https://github.com/boostorg/boost.git
        cd boost
        git submodule update --init --depth 5 --jobs 3
        rm -rf libs/histogram/*
        mv -f $GITHUB_WORKSPACE/* libs/histogram

        cd ..
        cmake -DBOOST_ENABLE_CMAKE=1 -DBoost_VERBOSE=1 boost
        ctest -j2 --output-on-failure -R boost_histogram
    - name: b2 cxxstd=14,17 exception-handling=on/off rtti=on/off
      run: |
        cd $GITHUB_WORKSPACE/../boost
        ./bootstrap.sh
        ./b2 headers
        cd libs/histogram
        B2="../../b2 -q -j2 warnings-as-errors=on"
        $B2 cxxstd=14,17 test//all examples
        $B2 cxxstd=14 exception-handling=off rtti=off test//minimal

  cov:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: install cpp-coveralls
      run: |
        python --version
        pip install cpp-coveralls
    - name: b2 toolset=gcc-8 cxxstd=latest coverage=on test//all
      env:
        COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
      run: |
        cd ..
        git clone -b $GITHUB_BASE_REF --depth 5 https://github.com/boostorg/boost.git
        cd boost
        git submodule update --init --depth 5 tools/build tools/boostdep
        mv -f $GITHUB_WORKSPACE/* libs/histogram

        python tools/boostdep/depinst/depinst.py --git_args "--depth 5 --jobs 3" histogram

        # # use hdembinski/serialization due to frequent errors in boostorg/serialization
        # pushd libs/serialization
        # git remote add patch https://github.com/HDembinski/serialization.git
        # git fetch patch
        # git checkout patch/boost_histogram
        # popd

        # prepare build
        ./bootstrap.sh
        ./b2 headers

        # simulate bundled boost by moving the headers instead of symlinking
        rm -rf boost/histogram.pp boost/histogram
        mv -f libs/histogram/include/boost/* boost
        cd libs/histogram

        B2="../../b2 -q -j2 warnings-as-errors=on"
        # don't compile examples in coverage build, coverage must come from tests alone
        $B2 toolset=gcc-8 cxxstd=latest coverage=on test//all

        # process and send coverage data
        GCOV=gcov-8 tools/cov.sh $COVERALLS_TOKEN
