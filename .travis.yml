# Copyright Hans P. Dembinski 2016-2017
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

sudo: false

cache:
  pip: true

language: cpp

branches:
  only:
    - master
    - develop

matrix:
  include:
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
            - boost-latest
            - george-edison55-precise-backports # cmake 3.2.3 / doxygen 1.8.3
          packages:
            - cmake
            - cmake-data
            - clang-3.6
      env: COMPILER_VERSION=3.6
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
            - boost-latest
            - george-edison55-precise-backports # cmake 3.2.3 / doxygen 1.8.3
          packages:
            - cmake
            - cmake-data
            - clang-3.8
      env: COMPILER_VERSION=3.8 PYTHON_VERSION=2.7.3
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - boost-latest
            - george-edison55-precise-backports # cmake 3.2.3 / doxygen 1.8.3
          packages:
            - cmake
            - cmake-data
            - g++-4.8
      env: COMPILER_VERSION=4.8
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - boost-latest
            - george-edison55-precise-backports # cmake 3.2.3 / doxygen 1.8.3
          packages:
            - cmake
            - cmake-data
            - g++-6
      env: COMPILER_VERSION=6 CMAKE_BUILD_TYPE=cov

git:
  depth: 1

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps/boost-1.63.0

# Install packages
install:
  - export CXX=${CXX}-${COMPILER_VERSION}
  - export CC=${CC}-${COMPILER_VERSION}

  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
    mkdir -p ${DEPS_DIR}

  - BOOST_VERSION=1.63.0
    BOOST_DIR=${DEPS_DIR}/boost-${BOOST_VERSION}
    if [[ -z "$(ls -A ${BOOST_DIR})" ]]; then
      BOOST_URL="http://github.com/boostorg/boost.git"
      travis_retry git clone --depth 1 --recursive --quiet ${BOOST_URL} ${BOOST_DIR} || exit 1
      (cd ${BOOST_DIR} && ./bootstrap.sh && ./b2 install --prefix=${DEPS_DIR}/boost-${BOOST_VERSION})
    fi

  - if [ -z ${PYTHON_VERSION} ]; then
      export BUILD_PYTHON=OFF;
    else
      export BUILD_PYTHON=ON;
    fi
  - if [ -z ${NUMPY_SUPPORT} ]; then
      export NUMPY_SUPPORT=OFF;
    fi
  - if [ "${CMAKE_BUILD_TYPE}" = "cov" ]; then
      pip install --user numpy==1.11.1 cpp-coveralls urllib3[secure];
    fi
  - if [ "${NUMPY_SUPPORT}" = "ON" ]; then
      pip install --user numpy==1.11.1;
    fi

script:
  - cd build
  - if [ "${CMAKE_BUILD_TYPE}" = "cov" ]; then
      cmake . -DBUILD_PYTHON=OFF
              -DCMAKE_BUILD_TYPE=cov &&
      make -j2 &&
      ctest -V;
      cmake . -DBUILD_PYTHON=ON
              -DBUILD_NUMPY_SUPPORT=OFF
              -DCMAKE_BUILD_TYPE=cov &&
      make -j2 &&
      ctest -V;
      cmake . -DBUILD_PYTHON=ON
              -DBUILD_NUMPY_SUPPORT=ON
              -DCMAKE_BUILD_TYPE=cov &&
      make -j2 &&
      ctest -V;
    else
      python ../doc/extract_code.py;
      cmake . -DBUILD_PYTHON=${BUILD_PYTHON}
              -DPYTHON_VERSION=${PYTHON_VERSION}
              -DBUILD_NUMPY_SUPPORT=${NUMPY_SUPPORT}
              -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} &&
      make -j2 &&
      ctest -V;
    fi

# Calculate coverage
after_success:
  if [ "${CMAKE_BUILD_TYPE}" = "cov" ]; then
    coveralls -r .. -b . --verbose --gcov=`which gcov-${COMPILER_VERSION}`;
  fi

after_failure:
  # - printf "r\nbt" > gdb.cmd
  # - for x in *_test; do
  #     $x || gdb $x --batch -x gdb.cmd;
  #   done

notifications:
  email: false
