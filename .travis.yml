# Copyright Hans Dembinski 2016-2017
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

sudo: false
language: generic

cache:
  pip: true
  directories:
    - ${TRAVIS_BUILD_DIR}/deps/boost-1.66.0-py2
    - ${TRAVIS_BUILD_DIR}/deps/boost-1.66.0-py3

branches:
  only:
    - master
    - develop

# addons:
#   apt:
#     sources: deadsnakes
#     packages:
#       - python2.7
#       - python3.5
#       - python3-pip
#       - libpython2.7-dev
#       - libpython3.5-dev

matrix:
  include:
    - os: osx # minimum osx Xcode 8.3
      osximage: xcode8.3
      env:
        BUILD_PYTHON=OFF
        BUILD_NUMPY=OFF
        BUILD_SERIALIZATION=OFF
    - os: linux # gcc minimum
      env:
        CC=gcc CXX=g++ PYTHON_VERSION=2.7
        BUILD_PYTHON=OFF
        BUILD_NUMPY=OFF
        BUILD_SERIALIZATION=OFF
    - os: linux # gcc py27 w/o numpy
      env:
        CC=gcc CXX=g++ PYTHON_VERSION=2.7
        BUILD_PYTHON=ON
        BUILD_NUMPY=OFF
        BUILD_SERIALIZATION=ON
    - os: linux # gcc py27
      env:
        CC=gcc CXX=g++ PYTHON_VERSION=2.7
        BUILD_PYTHON=ON
        BUILD_NUMPY=ON
        BUILD_SERIALIZATION=ON
    - os: linux # gcc py36
      env:
        CC=gcc CXX=g++ PYTHON_VERSION=3.6
        BUILD_PYTHON=ON
        BUILD_NUMPY=ON
        BUILD_SERIALIZATION=ON
    - os: linux # clang py36
      env:
        CC=clang CXX=clang++
        BUILD_PYTHON=ON PYTHON_VERSION=3.6
        BUILD_NUMPY=ON
        BUILD_SERIALIZATION=ON
    - os: linux # coverage py36
      env:
        CC=gcc CXX=g++ GCOV=gcov PYTHON_VERSION=3.6
        CMAKE_BUILD_TYPE=coverage

git:
  depth: 10

# Install packages (pre-installed: pytest numpy)
install:
  - if [[ -n $(which pip) ]]; then
      python build/get_pip.py
    fi
  - pyenv versions
  - if [[ ${PYTHON_VERSION} ]]; then pyenv global ${PYTHON_VERSION}; fi
  - python build/get_python_include.py
  - python build/get_python_library.py

  - pip install --upgrade numpy # update numpy to avoid segfaults later
  - source build/travis_install_boost.sh

  - if [ "${CMAKE_BUILD_TYPE}" = "coverage" ]; then
      pip install --user cpp-coveralls urllib3[secure];
    fi

script:
  - cd build
  - if [ "${CMAKE_BUILD_TYPE}" = "coverage" ]; then
      cmake . -DBOOST_ROOT=${BOOST_DIR}
              -DBUILD_PYTHON=OFF
              -DBUILD_SERIALIZATION=ON
              -DCMAKE_BUILD_TYPE=coverage &&
      make -j2 &&
      ctest;
      cmake . -DBOOST_ROOT=${BOOST_DIR}
              -DBUILD_PYTHON=ON
              -DBUILD_NUMPY=OFF
              -DCMAKE_BUILD_TYPE=coverage &&
      make histogram cpp_filler &&
      ctest;
      cmake . -DBOOST_ROOT=${BOOST_DIR}
              -DBUILD_PYTHON=ON
              -DBUILD_NUMPY=ON
              -DCMAKE_BUILD_TYPE=coverage &&
      make histogram cpp_filler &&
      ctest;
    else
      cmake . -DBOOST_ROOT=${BOOST_DIR}
              -DBUILD_PYTHON=${BUILD_PYTHON}
              -DBUILD_NUMPY=${BUILD_NUMPY}
              -DBUILD_SERIALIZATION=${BUILD_SERIALIZATION}
              -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} &&
      make -j2 &&
      ctest -V;
    fi

# Calculate coverage
after_success:
  if [ "${CMAKE_BUILD_TYPE}" = "coverage" ]; then
    coveralls -r .. -b . --verbose --exclude ${TRAVIS_BUILD_DIR}/deps  --gcov=`which ${GCOV}` --gcov-options '\-lpbc';
  fi

# after_failure:
  # - printf "r\nbt" > gdb.cmd
  # - for x in *_test; do
  #     $x || gdb $x --batch -x gdb.cmd;
  #   done

notifications:
  email: false
