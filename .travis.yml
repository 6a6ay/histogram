sudo: false
cache:
  pip: true
language: cpp
matrix:
  include:
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - boost-latest
          packages:
            - g++-4.8
            - libboost1.55-all-dev
      env: COMPILER_VERSION=4.8 PYTHON_VERSION=2 CMAKE_BUILD_TYPE=cov
    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
            - boost-latest
          packages:
            - clang-3.6
            - libboost1.55-all-dev
      env: COMPILER_VERSION=3.6 PYTHON_VERSION=2
git:
  depth: 10

# Setup anaconda
# before_install:
#   - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
#   - bash miniconda.sh -b
#   - export PATH=$HOME/miniconda2/bin:$PATH
#   - conda update --yes conda

# Install packages
install:
  - export CXX=${CXX}-${COMPILER_VERSION}
  - export CC=${CC}-${COMPILER_VERSION}
  # - conda create --name pyenv --yes python=${PYTHON_VERSION} numpy
  # - source activate pyenv
  - pip install --user numpy cpp-coveralls urllib3[secure]

script:
  - cd build
  - cmake . -DBUILD_PYTHON=OFF
            -DBUILD_NUMPY_SUPPORT=OFF
            -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} &&
    make -j2 &&
    ctest -V
  - cmake . -DBUILD_PYTHON=ON
            -DBUILD_NUMPY_SUPPORT=OFF
            -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} &&
    make -j2 &&
    ctest -V
  - cmake . -DBUILD_PYTHON=ON
            -DBUILD_NUMPY_SUPPORT=ON
            -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} &&
    make -j2 &&
    ctest -V

# Calculate coverage
after_success:
  if [ "${CMAKE_BUILD_TYPE}" = "cov" ]; then
    coveralls -r .. -b . --verbose --gcov=`which gcov-${COMPILER_VERSION}`;
  fi

after_failure:
  - make clean && VERBOSE=1 make
  - dpkg -L libboost-python1.55.0

notifications:
  email: false
