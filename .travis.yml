sudo: false
language: cpp
matrix:
  include:
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - boost-latest
          packages:
            - g++-4.8
            - libboost1.55-all-dev
      env: COMPILER_VERSION=4.8 PYTHON_VERSION=2 USE_PYTHON=ON USE_NUMPY=ON COVERAGE=ON
    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
            - boost-latest
          packages:
            - clang-3.6
            - libboost1.55-all-dev
      env: COMPILER_VERSION=3.6 PYTHON_VERSION=2 USE_PYTHON=ON USE_NUMPY=ON COVERAGE=OFF
    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
            - boost-latest
          packages:
            - clang-3.6
            - libboost1.55-all-dev
      env: COMPILER_VERSION=3.6 PYTHON_VERSION=2 USE_PYTHON=ON USE_NUMPY=OFF COVERAGE=OFF
    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
            - boost-latest
          packages:
            - clang-3.6
            - libboost1.55-all-dev
      env: COMPILER_VERSION=3.6 PYTHON_VERSION=2 USE_PYTHON=OFF USE_NUMPY=OFF COVERAGE=OFF
git:
  depth: 10

# Setup anaconda
before_install:
  - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b
  - export PATH=$HOME/miniconda2/bin:$PATH
  - conda update --yes conda

# Install packages
install:
  - export CXX=${CXX}-${COMPILER_VERSION}
  - export CC=${CC}-${COMPILER_VERSION}
  - conda create --name pyenv --yes python=${PYTHON_VERSION} numpy
  - source activate pyenv
  - pip install --user cpp-coveralls

script:
  cd build && 
  cmake . -DUSE_PYTHON=${USE_PYTHON}
          -DUSE_NUMPY=${USE_NUMPY}
          -DCOVERAGE=${COVERAGE} &&
  make -j2 &&
  ctest -V

# Calculate coverage
after_success:
  - if [ "${COVERAGE}" = "ON" ]; then coveralls -r .. -b . --verbose --gcov=`which gcov-${COMPILER_VERSION}`; fi

after_failure:
  - make clean && VERBOSE=1 make
  - dpkg -L libboost-python1.55.0

notifications:
  email: false
